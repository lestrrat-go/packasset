// Automatically generated by packasset. DO NOT EDIT

package packasset_test

import (
	"bytes"
	"compress/flate"
	"io"
	"reflect"
	"strings"
	"unsafe"

	"github.com/pkg/errors"
)

type asset struct {
	cached []byte
	data   string
	name   string
}

var _assets = map[string]*asset{
	"generator.go": {
		name: "generator.go",
		data: "\xac\x56\x4b\x6f\xdb\x38\x10\x3e\x8b\xbf\x62\x4a\xc0\x81\x18\x08\x74\xb1\x47\x17\x3e\x6c\x92\xee\x03\x58\x24\xbb\xdb\x62\x7b\xb0\x83\x98\x96\x49\x47\x88\x44\x0a\x24\xd5\xc4\x30\xfc\xdf\x17\x7c\xc8\x8f\x54\x92\xd1\x20\x39\x44\x32\x35\x9c\xc7\x37\xdf\x7c\x64\xcd\xf2\x27\xb6\xe6\xe0\x9f\xc6\x70\x8b\x50\x51\xd5\x4a\x5b\x48\x51\x82\x97\x1b\xcb\x0d\x46\x09\xce\x55\x55\x6b\x6e\xcc\x58\x94\xcc\x72\xb7\x22\x2a\xeb\x1e\x6b\x35\x16\x4a\x57\xcc\xff\x28\x94\xfb\xaf\xfc\x0e\xa3\xb4\x5f\x33\x56\xe7\x4a\x7e\xc7\xc8\x19\x17\xf6\xb1\x59\xd2\x5c\x55\xe3\xfa\x69\x3d\xe6\x5a\x2b\x6d\x30\x22\x08\x89\x46\xe6\x70\xcb\x9f\x7f\xe7\x92\x6b\x66\x95\x4e\x55\x6d\x0b\x25\x0d\x50\x4a\xef\xfc\x2b\x81\xcb\xfd\x57\xd8\xa2\xe4\x3b\xd3\x10\xb3\xbf\x65\x15\x87\x29\xe0\x8a\x15\x12\x87\x2f\xa2\x28\xb9\x81\xd9\xbd\xb1\xba\x90\x6b\x94\x08\xa5\xe1\x21\x03\x05\x93\x29\x68\x26\xd7\x1c\xda\x00\x5b\x94\x24\xe6\xb9\xb0\xf9\x23\x28\xea\x3c\xa5\xc4\xaf\xe5\xcc\x70\xc0\x31\xc2\x83\x64\x15\xc7\x13\x94\x24\xc9\x69\x4c\x45\xff\x63\x65\xc3\x53\x42\xd3\x10\x8a\xec\xb7\xfa\x14\xc2\x9e\x90\xcd\x89\x75\x9b\x9a\xb3\xdf\xa1\x64\x87\x50\xa2\xb9\x6d\xb4\x84\x8b\x7d\x99\x2e\x8d\xa3\x70\x93\xe3\x7a\x33\x14\xdd\x4e\x20\xfc\xf9\x1f\x99\xf3\xb4\x8b\x78\xa6\xeb\x23\xc8\x08\xc4\x57\x57\x5f\x3a\xbb\x77\xad\xcd\xc0\xb7\x80\xb4\x70\x2e\x1b\x01\xbe\xe5\xf4\xaa\x11\x82\x6b\x94\x88\xca\xd2\xdf\x6a\x5d\x48\x2b\xd2\x8b\x65\x23\x32\x58\x8c\xc7\xf0\x6b\x63\x55\xc5\x6c\x91\xb3\xb2\xdc\xc0\x3a\xfa\x5d\xc1\x72\x73\xe0\x11\x85\x9b\x3b\xb8\xbd\xfb\x0a\x9f\x6f\xfe\xfc\xba\x20\x5d\xae\xf0\x5c\xce\x65\x4b\xc0\x91\xc1\x19\xac\xe9\x51\x85\x04\xf5\x6e\x6a\x29\x8a\xc9\xbe\xb3\xf2\xd0\xd9\x16\xda\x6d\xe4\x6f\x06\xaf\xf9\x9b\x81\xe3\x6a\x06\x58\x73\x51\xf2\xdc\xba\xd7\xb0\xc7\x5b\x37\xd2\x30\xc1\xf1\xce\xf3\xa0\x33\x05\x9f\x6d\xa4\x36\xfd\xa7\x51\x96\xa7\x92\x10\x07\x7e\xb7\xfd\xb9\x44\xbb\x27\xe3\x1d\x13\x20\x78\x00\x4e\xbb\xa9\x39\xf8\xae\x39\x97\x4d\x6e\x61\x8b\xfb\x3a\x96\xb3\xfc\x91\xaf\x20\x10\xa8\xd7\x6a\xc5\x2c\x83\x50\x5c\xaf\x8d\x1b\xa9\x73\x36\x3b\x9f\xb6\xd3\x12\xfa\x25\xf4\x27\x5d\x53\xcf\xf4\x7e\x46\x39\x26\x3f\xf8\x6a\xdc\xc8\x55\xac\x9e\x85\x20\xf7\x97\x7e\x71\x7b\xd4\x0b\xe7\xe9\xd0\x8e\xe8\x79\x08\xf4\x09\x6c\x7f\xc0\xdd\x6d\x72\xd0\xf7\x57\x39\x81\x91\xc9\x7e\x72\x9f\x43\x70\x02\x73\x8c\xbd\xa0\x28\x69\xb9\xb4\x7e\x5e\x5d\xbe\x21\xd3\xeb\xb0\x1a\x1c\xa1\x24\x29\x84\xff\xfe\x61\x0a\xb2\x28\x7d\x15\xad\xa4\xc8\xa2\x8c\xb3\x6e\xe8\x37\xcd\x6a\x91\x72\xad\x33\x58\xac\x5b\x75\x98\x80\x60\x45\xc9\x57\x60\xd5\x7e\x9e\x03\x3a\x31\x34\x38\xc4\x46\x66\x11\x30\x0b\xa2\xe5\x52\x0f\x38\x2e\x0f\x20\xb6\xf6\x3e\x7c\x57\x65\xf3\x97\xd1\xc7\x5f\x5e\x70\x06\xcb\x28\x7d\x9d\x56\x38\xc3\xbd\xd0\xec\xfc\xb7\xdd\x20\x65\x7a\xb8\xe1\x75\xd1\xaa\x2b\xa7\x0b\xa9\x89\xec\x23\x91\xcd\x03\xac\x77\x9c\xe2\x55\x6d\x37\x30\xfb\x38\xcc\x7c\xf3\xe2\xb0\x48\x2f\xa3\xb2\x44\xda\xfe\xc1\xd9\x8a\x6b\x92\x06\x65\xa1\x7f\xab\x42\x5a\xae\xd3\x0b\x43\x48\xaf\x27\x0f\xaa\x0f\x3a\x9b\xdc\xf7\x5b\xbd\x8e\x57\x16\x39\xef\x0b\xb7\x1c\x0a\xf7\x42\x6f\xdc\xd4\x4e\xc1\x84\xb7\x21\xcb\xbf\xb8\x84\x29\x94\x5c\xa6\x66\xd0\xe3\x35\xab\x61\x0a\x61\x43\xaf\x5d\x24\xe9\xf2\x8c\x0a\xf4\xb4\xd4\x9d\x47\x6e\xae\x7b\x77\xfb\x9e\x7b\x93\xf4\x48\x72\x3a\x0e\xc1\x5e\x0f\x2c\x03\xf5\xe4\x60\x8e\xb2\x32\x73\x7e\xfa\x5b\x52\x08\xf8\xa0\x9e\x06\xfc\x75\x4c\xe5\x67\xf7\x10\xe9\xc2\x07\x98\x44\x31\x1e\x8d\x0c\x48\xe5\x66\xaf\x91\xab\x45\x06\x2e\x2c\x19\x44\xa9\x37\x21\x4f\x26\x46\x83\x7a\x7f\x82\xe5\x5e\x25\xce\x76\x25\x73\x76\x6f\x08\xda\x75\xa1\x18\xca\xf0\x61\xaf\x6e\x85\xa2\xd7\xaa\xde\xc4\xaf\xfe\xc4\xa6\xb7\xfc\xf9\x5f\x4f\xea\x78\xcd\x32\x47\x2b\x8c\x3a\xb1\x24\x84\x7c\x3a\xd1\xbf\x9f\x81\xdf\x89\x62\xd0\xc4\x39\x3e\x28\xe1\x8a\xfb\xe0\xad\xa6\xcd\xf1\x5b\xc0\x6f\x41\x77\x73\xd0\x08\x1a\xa4\x87\x9c\x85\xfd\x60\x7a\xbe\x01\xfb\xab\x63\xb8\x8a\xd3\x2f\xaa\xd1\x39\x4f\x8f\x7c\x90\xbe\x4b\xe1\xc9\x39\x22\xfb\x67\xa3\xef\x82\xa8\x9a\xc3\xa9\xb4\xef\xd4\x37\x5d\x04\xb9\x39\xf4\xef\x8a\x1b\x7b\x1d\x2f\x61\xee\x32\x8f\x3a\x4e\xab\xc1\xbe\x74\x9f\x55\xb9\xe6\xfe\xa4\xf2\x6d\x7a\xf6\x61\x17\x24\xdc\xa6\xc5\x3e\x2f\x65\xe8\x5d\xcd\x65\x2a\xde\x2d\xac\xaa\xb9\xf4\xd0\x85\x60\xc9\x8a\x0b\xae\x41\xd0\xeb\x52\x19\x9e\xba\x86\x74\x12\xda\x83\x25\x5e\xd1\xf4\x6d\x19\xf8\x5a\x4f\x4e\xe8\xb6\xee\x58\xa0\xab\xbb\xb1\x6d\x46\xef\x11\xb2\x9d\x86\xae\xa0\x3d\xac\x45\x3b\xf4\x7f\x00\x00\x00\xff\xff",
	},
	"interface.go": {
		name: "interface.go",
		data: "\x5c\xce\xc1\x0a\xc2\x30\x0c\x06\xe0\xf3\xfa\x14\x39\xea\x93\x78\xd3\x9b\x17\xf1\x10\xca\xbf\x51\x9c\x69\x69\x33\x41\xc6\xde\x5d\xe2\x4a\x04\x7b\x29\x0d\xff\xf7\x37\x85\xe3\x83\x27\xd0\xf7\x6e\x0d\x1a\x82\xbe\x0b\xe8\x04\x41\x65\xcd\x95\x9a\xd6\x25\x2a\xad\x61\xe8\xd9\x33\x3f\x61\xd3\x24\x53\x18\xc6\x34\xa3\xd1\x7e\x6e\xf7\x3e\xdd\x7a\xc9\xa5\x68\xca\x42\x49\x14\x75\xe4\x08\x2b\x31\x7d\x38\xba\xbf\xf2\xbc\xd8\xdb\x33\xeb\xe6\x3c\xef\xfc\xb7\x80\xd8\xcf\x4e\x5f\x46\xff\xe0\x27\x00\x00\xff\xff",
	},
	"options.go": {
		name: "options.go",
		data: "\x94\x8f\xb1\x0a\xc2\x30\x10\x86\xe7\xdc\x53\xfc\x74\x90\x16\x8a\x0f\xd0\x07\x70\x54\x27\x1d\x44\x24\x94\x6b\x0d\xa6\x49\x49\x52\x97\xd2\x77\x97\xa4\x45\x5a\x9c\x9c\x42\x38\xbe\xef\xbb\xeb\x65\xfd\x92\x2d\x23\xbd\xde\x73\x20\x6a\x06\x53\x23\xb7\xb0\x7d\x50\xd6\x14\x38\xca\x8e\xf3\x02\x3e\x38\x65\x5a\x8c\x24\x1c\x87\xc1\x19\xd8\xbd\x91\x1d\xd3\xf4\x4b\x5c\xa4\x1e\x22\xa2\x4c\x60\xd7\xc8\x9a\xc7\x69\xc3\xbd\xe3\xfc\x0b\x5e\x55\x78\x9e\xe7\x35\x52\xca\x2f\xa9\x02\xa7\xe4\x5b\xa1\xbb\xb9\x30\x92\x10\xb1\x5d\x01\xd9\x72\xc0\x23\xfe\xb3\x92\x84\x48\xf2\x0a\xbe\x24\x31\x6d\x1a\x07\xa5\xd9\xe7\x1a\xb7\xfb\x3f\xfe\x26\x52\x6b\xb1\x5e\xc4\x9f\x00\x00\x00\xff\xff",
	},
	"packasset.go": {
		name: "packasset.go",
		data: "\xd2\xd7\x4f\xcf\xb7\x4a\x4f\xcd\x4b\x2d\x4a\x2c\x49\x55\x28\xce\x50\xd0\x4d\x56\x50\xca\x29\x56\xd0\xd2\x4b\xcf\x57\xa8\x51\x48\xcf\x57\x28\x2a\xcd\x53\x48\xce\x4d\xd1\x2f\x48\x4c\xce\x4e\x2c\x2e\x4e\x2d\x41\xb0\x40\x6a\x74\xf3\x4b\x4b\x0a\x4a\x4b\x14\xc0\x02\xf1\x25\xa9\xc5\x10\x51\xb0\x9a\xf4\x54\x5b\xb8\x5a\xb0\x94\x12\x17\x17\x54\x42\x01\x2e\x01\x08\x00\x00\xff\xff",
	},
	"packasset_test.go": {
		name: "packasset_test.go",
		data: "\x9c\x90\x3d\x4f\xc3\x30\x10\x86\x67\xfb\x57\x1c\x96\x90\x12\x1a\x25\xc0\x48\x61\x40\xa2\x8c\x0c\x6d\x77\x94\x3a\xe7\xe4\x20\xb1\x8b\x7d\x06\x21\x94\xff\x8e\x9c\xb6\x88\xaf\x01\xb1\xf8\x43\xbe\x7b\xde\xc7\xb7\xad\xf5\x63\xdd\x22\x4c\x7b\x08\xc8\xf7\x8c\x81\xa5\xa4\x61\xeb\x3c\x43\x26\x85\x32\x03\x2b\x29\x14\xb9\x8a\x5c\x64\xea\xd3\x25\x15\x91\x6d\x95\x94\x42\xb5\xc4\x5d\xdc\x94\xda\x0d\x55\x60\x8f\xac\x3b\x5f\x4d\xef\xe6\xb5\x4a\x48\xcf\x4a\xe6\x52\x9a\x68\x35\xac\x31\xf0\x0a\x7b\x73\x9d\xa2\x32\x86\x93\x3d\xa8\x5c\xe7\xf0\x26\x45\x55\xc1\x8d\x03\x62\xe0\x17\xd2\x58\xc0\x43\x0c\x0c\xec\xc0\x24\x2a\x70\x87\xa0\x6b\xdd\x61\x03\xcf\xe8\x03\x39\x2b\x85\x71\x1e\x08\x2e\xae\xe0\x74\x0e\x04\x97\x70\x3e\x07\x9a\xcd\x12\x4b\x70\xb9\x8c\x36\x33\x03\x97\xab\xad\x27\xcb\x26\x53\x3e\xda\xe3\x46\x15\x40\xb3\xb3\xbc\x80\x64\xf4\xd3\x41\x88\x4d\x34\x05\xa0\xf7\x09\xbb\x13\x55\x5f\xc7\x53\xb6\x4e\xe5\xa9\x92\x0c\x1c\xed\xbe\x58\xde\xb9\x85\xf7\xce\x67\x3c\xb5\x16\xa0\xa6\x4e\x08\x9d\x8b\x7d\x03\x21\x6a\x8d\xd8\xa8\x7d\x82\xf0\xc8\xd1\xdb\x74\x1c\x65\x5a\x5b\xd7\x37\x68\x3f\x52\x77\x83\x2e\x97\x58\x37\xb7\xd4\xe3\xbf\xf2\xbf\x31\xfe\x6a\xf2\x09\xb9\x78\x8a\x75\x9f\x80\x07\xbb\x69\x30\x4a\x3b\xcb\x68\x39\x1c\x88\x43\xcd\xba\xfb\x95\x27\xc4\x98\x4b\x31\xca\x51\xbe\x07\x00\x00\xff\xff",
	},
}

func toBytes(s string) []byte {
	var empty [0]byte
	sx := (*reflect.StringHeader)(unsafe.Pointer(&s))
	b := empty[:]
	bx := (*reflect.SliceHeader)(unsafe.Pointer(&b))
	bx.Data = sx.Data
	bx.Len = len(s)
	bx.Cap = bx.Len
	return b
}

// Asset
func Asset(name string) ([]byte, error) {
	a, ok := _assets[name]
	if !ok {
		return nil, errors.Errorf(`asset: asset %s not found`, name)
	}
	if b := a.cached; b != nil {
		return b, nil
	}
	var buf bytes.Buffer
	if _, err := io.Copy(&buf, flate.NewReader(strings.NewReader(a.data))); err != nil {
		return nil, errors.Wrap(err, "failed to deflate content")
	}
	a.cached = buf.Bytes()
	return buf.Bytes(), nil
}
